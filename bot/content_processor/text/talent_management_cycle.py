from telebot import types
from bot.utils.buttons import Buttons
from bot.utils.documents import Documents
from bot import bot


class TalentManagementCycle:

    def talent_management_cycle(message: types.Message) -> types.Message:
        buttons = [
            '–û–±—É—á–µ–Ω–∏–µ',
            '–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞',
            '–î–∏–∞–ª–æ–≥–∏ –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
            '–ö–æ–º–∏—Ç–µ—Ç—ã –ø–æ —Ç–∞–ª–∞–Ω—Ç–∞–º',
            '–î–∏–∞–ª–æ–≥–∏ –æ —Ä–∞–∑–≤–∏—Ç–∏–∏',
            'üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é',
        ]
        markup = Buttons.create_keyboard_buttons(buttons, row_width=2)
        bot.send_message(
            message.from_user.id,
            text="‚¨á –¶–∏–∫–ª —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ç–∞–ª–∞–Ω—Ç–∞–º–∏",
            reply_markup=markup,
        )

    def regular_assessment(message: types.Message) -> types.Message:
        parrent_path = 'prod_data/–¶–∏–∫–ª_—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è_—Ç–∞–ª–∞–Ω—Ç–∞–º–∏/–†–µ–≥—É–ª—è—Ä–Ω–∞—è_–æ—Ü–µ–Ω–∫–∞/'
        documents = (
            f'{parrent_path}instruction.pdf',
            f'{parrent_path}–¥–ª—è_—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤.pdf',
            f'{parrent_path}reg_360.pdf',
        )
        captions = (
            '–ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –ø–æ —á—Ç–µ–Ω–∏—é –æ—Ç—á–µ—Ç–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–π –æ—Ü–µ–Ω–∫–∏',
            '–†–µ–≥—É–ª—è—Ä–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',
            '–ë—Ä–æ—à—é—Ä–∞ —Ä–µ–≥—É–ª—è—Ä–Ω–æ–∏ÃÜ –æ—Ü–µ–Ω–∫–∏ 360',
        )
        buttons = [
            ["—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ", "https://youtu.be/yxILbJcIFA8"]
        ]
        markup = Buttons.create_inline_keyboard(buttons)
        bot.send_message(
            message.chat.id,
            '‚¨á –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞—è –æ—Ü–µ–Ω–∫–∞ 360 –≥—Ä–∞–¥—É—Å–æ–≤',
            reply_markup=markup,
        )
        Documents.send_document_with_markup(message.chat.id, documents, captions)

    def contribution_evaluation_commission(message: types.Message) -> types.Message:
        parrent_path = 'prod_data/–¶–∏–∫–ª_—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è_—Ç–∞–ª–∞–Ω—Ç–∞–º–∏/–†–µ–≥—É–ª—è—Ä–Ω–∞—è_–æ—Ü–µ–Ω–∫–∞'
        document = (f'{parrent_path}/–ö–æ–º–∏—Å—Å–∏—è.pdf',)
        caption = ('–ö–æ–º–∏—Å—Å–∏—è –ø–æ –æ—Ü–µ–Ω–∫–µ –≤–∫–ª–∞–¥–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤',)
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def dialogues_about_efficiency(message: types.Message) -> types.Message:
        parrent_path = 'prod_data/–¶–∏–∫–ª_—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è_—Ç–∞–ª–∞–Ω—Ç–∞–º–∏/–î–∏–∞–ª–æ–≥–∏_–æ–±_—ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏/'
        documents = (
            f'{parrent_path}dialog.pdf',
            f'{parrent_path}–î–æ–≠–§.PNG',
        )
        captions = (
            '–î–∏–∞–ª–æ–≥ –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ - –ü–∞–º—è—Ç–∫–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞',
            '–ü–æ–º—è—Ç–∫–∞ –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞',
        )
        buttons = [
            ["—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ", "https://youtu.be/O2JyX9iL8Hs"]
        ]
        markup = Buttons.create_inline_keyboard(buttons)
        bot.send_message(
            message.chat.id,
            '‚¨á –î–∏–∞–ª–æ–≥ –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
            reply_markup=markup,
        )
        Documents.send_document_with_markup(message.chat.id, documents, captions)

    def talent_committees(message: types.Message) -> types.Message:
        parrent_path = 'prod_data/–¶–∏–∫–ª_—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è_—Ç–∞–ª–∞–Ω—Ç–∞–º–∏/comitet/'
        documents = (
            {
                'file': open(f'{parrent_path}nmd.pdf', 'rb'),
                'caption': '–ö–æ–º–∏—Ç–µ—Ç –ø–æ —Ç–∞–ª–∞–Ω—Ç–∞–º - –ø—Ä–æ—Ü–µ–¥—É—Ä–∞ –ø—Ä–æ–≤–µ–¥–µ–Ω–∏—è',
            },
            {
                'file': open(f'{parrent_path}PR_criteria.pdf', 'rb'),
                'caption': '–ö—Ä–∏—Ç–µ—Ä–∏–∏ –≤–∫–ª—é—á–µ–Ω–∏—è –≤ –∫–∞–¥—Ä–æ–≤—ã–π —Ä–µ–∑–µ—Ä–≤',
            },
            {
                'file': open(f'{parrent_path}rules.pdf', 'rb'),
                'caption': '–ü—Ä–∞–≤–∏–ª–∞ –Ω–∞—Ö–æ–∂–¥–µ–Ω–∏—è –≤ –∫–∞–¥—Ä–æ–≤–æ–º —Ä–µ–∑–µ—Ä–≤–µ',
            },
        )
        buttons = [
            ["—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ", "https://youtu.be/O2JyX9iL8Hs"]
        ]
        markup = Buttons.create_inline_keyboard(buttons)
        bot.send_message(
            message.chat.id,
            '‚¨á –ö–æ–º–∏—Ç–µ—Ç—ã –ø–æ —Ç–∞–ª–∞–Ω—Ç–∞–º',
            reply_markup=markup,
        )
        Documents.send_media_group_without_markup(message.chat.id, documents)

    def development_dialogues(message: types.Message) -> types.Message:
        parrent_path = 'prod_data/–¶–∏–∫–ª_—É–ø—Ä–∞–≤–ª–µ–Ω–∏—è_—Ç–∞–ª–∞–Ω—Ç–∞–º–∏/–î–∏–∞–ª–æ–≥–∏_–æ_—Ä–∞–∑–≤–∏—Ç–∏–∏/'
        documents = (
            {
                'file': open(f'{parrent_path}–ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è.pdf', 'rb'),
                'caption': '–î–∏–∞–ª–æ–≥ –æ —Ä–∞–∑–≤–∏—Ç–∏–∏ - –ú–µ—Ç–æ–¥–æ–ª–æ–≥–∏—è',
            },
            {
                'file': open(f'{parrent_path}difference.pdf', 'rb'),
                'caption': '–†–∞–∑–Ω–∏—Ü–∞ –º–µ–∂–¥—É –¥–∏–∞–ª–æ–≥–æ–º –æ —Ä–∞–∑–≤–∏—Ç–∏–∏ –∏ –¥–∏–∞–ª–æ–≥–æ–º –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏',
            },
        )
        buttons = [
            ["—Å–º–æ—Ç—Ä–µ—Ç—å –≤–∏–¥–µ–æ", "https://youtu.be/HZB4eES30XI"]
        ]
        markup = Buttons.create_inline_keyboard(buttons)
        bot.send_message(
            message.chat.id,
            '‚¨á –î–∏–∞–ª–æ–≥–∏ –æ —Ä–∞–∑–≤–∏—Ç–∏–∏',
            reply_markup=markup,
        )
        Documents.send_media_group_without_markup(message.chat.id, documents)
