from telebot import types
from bot.utils.buttons import Buttons
from bot.utils.documents import Documents
from bot import bot
from bot.constants import ES, ITS, NR, ST


class AboutCompany:

    def about_company(message: types.Message) -> types.Message:
        buttons = [
            "–í—ã–±—Ä–∞—Ç—å –î–û",
            "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏",
            "–°–µ—Ä–≤–∏—Å—ã –¥–ª—è —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤",
            "–ù–æ–≤–æ—Å—Ç–Ω–∞—è –ª–µ–Ω—Ç–∞",
            "–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω–∞—è —ç—Ç–∏–∫–∞",
            "üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é",
        ]
        markup = Buttons.create_keyboard_buttons(buttons, row_width=2)
        bot.send_message(
            message.from_user.id,
            text="‚¨á –û –∫–æ–º–ø–∞–Ω–∏–∏",
            reply_markup=markup,
        )

    def choose_do(message: types.Message) -> types.Message:
        buttons = [
            '–ù–µ—Ñ—Ç–µ—Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è',
            '–ì–∞–∑–ø—Ä–æ–º–Ω–µ—Ñ—Ç—å –≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º—ã',
            '–ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å',
            '–ì–∞–∑–ø—Ä–æ–º–Ω–µ—Ñ—Ç—å –°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏',
            'üîô –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª –û –∫–æ–º–ø–∞–Ω–∏–∏',
        ]
        markup = Buttons.create_keyboard_buttons(buttons, row_width=1)
        bot.send_message(
            message.from_user.id,
            "‚¨á –í—ã–±—Ä–∞—Ç—å –î–û",
            reply_markup=markup
        )

    def do_st(message: types.Message) -> types.Message:
        buttons = [
            '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –°–¢',
            '–ò—Å—Ç–æ—Ä–∏—è –°–¢',
            'üîô –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª –í—ã–±—Ä–∞—Ç—å –î–û',
        ]
        markup = Buttons.create_keyboard_buttons(buttons, row_width=1)
        bot.send_message(
            message.from_user.id,
            "‚¨á –ì–∞–∑–ø—Ä–æ–º–Ω–µ—Ñ—Ç—å –°–µ—Ä–≤–∏—Å–Ω—ã–µ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏",
            reply_markup=markup
        )

    def history_st(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–°–¢/–∏—Å—Ç–æ—Ä–∏—è/about_us.pdf']
        caption = [f'–ò—Å—Ç–æ—Ä–∏—è {ST}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def structure_st(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–°–¢/—Å—Ç—Ä—É–∫—Ç—É—Ä–∞/structure.pdf']
        caption = [f'–°—Ç—Ä—É–∫—Ç—É—Ä–∞ {ST}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def do_nr(message: types.Message) -> types.Message:
        buttons = [
            '–ò—Å—Ç–æ—Ä–∏—è –ù–†',
            'üîô –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª –í—ã–±—Ä–∞—Ç—å –î–û',
        ]
        markup = Buttons.create_keyboard_buttons(buttons, row_width=1)
        bot.send_message(
            message.from_user.id,
            "‚¨á –ù–µ—Ñ—Ç–µ—Å–µ—Ä–≤–∏—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è",
            reply_markup=markup
        )

    def history_nr(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ù–†/–ò—Å—Ç–æ—Ä–∏—è/about_us.pdf']
        caption = [f'–ò—Å—Ç–æ—Ä–∏—è {NR}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def structure_nr(message: types.Message) -> types.Message:
        document = ('prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ù–†/structure.pdf',)
        caption = (f'–°—Ç—Ä—É–∫—Ç—É—Ä–∞ {NR}',)
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def do_its(message: types.Message) -> types.Message:
        buttons = [
            '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ò–¢–°',
            '–ù–ú–î –ò–¢–°',
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã –ò–¢–°',
            '–ò—Å—Ç–æ—Ä–∏—è –ò–¢–°',
            'üîô –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª –í—ã–±—Ä–∞—Ç—å –î–û',
        ]
        markup = Buttons.create_keyboard_buttons(buttons, row_width=1)
        bot.send_message(
            message.from_user.id,
            "‚¨á –ò–Ω–∂–µ–Ω–µ—Ä–Ω–æ-—Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–π —Å–µ—Ä–≤–∏—Å",
            reply_markup=markup
        )

    def contacts_its(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ù–ù–ì–ì–§/–ö–æ–Ω—Ç–∞–∫—Ç—ã/info.pdf']
        caption = [f'–ö–æ–Ω—Ç–∞–∫—Ç—ã {ITS}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def history_its(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ù–ù–ì–ì–§/–ò—Å—Ç–æ—Ä–∏—è/about_us.pdf']
        caption = [f'–ò—Å—Ç–æ—Ä–∏—è {ITS}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def structure_its(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ù–ù–ì–ì–§/–°—Ç—Ä—É–∫—Ç—É—Ä–∞/structure.pdf']
        caption = [f'–°—Ç—Ä—É–∫—Ç—É—Ä–∞ {ITS}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def nmd_its(message: types.Message) -> types.Message:
        parrent_path = 'prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ù–ù–ì–ì–§/–ù–ú–î/'
        document = [
            f'{parrent_path}8.pdf',
            f'{parrent_path}ptvr.pdf',
            f'{parrent_path}vahta.pdf',
        ]
        caption = [
            f'–ü—Ä–æ–ø—É—Å–∫–Ω–æ–π –∏ –≤–Ω—É—Ç—Ä–µ–æ–±—ä–µ–∫—Ç–æ–≤—ã–π —Ä–µ–∂–∏–º—ã {ITS}',
            f'–ü—Ä–∞–≤–∏–ª–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–≥–æ —Ç—Ä—É–¥–æ–≤–æ–≥–æ —Ä–∞—Å–ø–æ—Ä—è–¥–∫–∞ {ITS}',
            f'–ü–æ–ª–æ–∂–µ–Ω–∏–µ –æ –≤–∞—Ö—Ç–æ–≤–æ–º –º–µ—Ç–æ–¥–µ —Ä–∞–±–æ—Ç—ã {ITS}',
        ]
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def do_es(message: types.Message) -> types.Message:
        buttons = [
            '–ò—Å—Ç–æ—Ä–∏—è –≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º',
            '–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º',
            '–ö–æ–Ω—Ç–∞–∫—Ç—ã –≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º',
            'üîô –≤–µ—Ä–Ω—É—Ç—å—Å—è –≤ —Ä–∞–∑–¥–µ–ª –í—ã–±—Ä–∞—Ç—å –î–û',
        ]
        markup = Buttons.create_keyboard_buttons(buttons, row_width=1)
        bot.send_message(
            message.from_user.id,
            "‚¨á –ì–∞–∑–ø—Ä–æ–º–Ω–µ—Ñ—Ç—å –≠–Ω–µ—Ä–≥–æ—Å–∏—Å—Ç–µ–º—ã",
            reply_markup=markup
        )

    def history_es(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ì–ü–ù_–≠–°/–∏—Å—Ç–æ—Ä–∏—è/about_us.pdf']
        caption = [f'–ò—Å—Ç–æ—Ä–∏—è {ES}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def structure_es(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ì–ü–ù_–≠–°/–°—Ç—Ä—É–∫—Ç—É—Ä–∞/'
                    '–æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–æ–Ω–Ω–∞—è_—Å—Ç—Ä—É–∫—Ç—É—Ä–∞_–≠–°.pdf']
        caption = [f'–°—Ç—Ä—É–∫—Ç—É—Ä–∞ –∫–æ–º–ø–∞–Ω–∏–∏ {ES}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def contacts_es(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–≤—ã–±—Ä–∞—Ç—å_–î–û/–ì–ü–ù_–≠–°/–∫–æ–Ω—Ç–∞–∫—Ç—ã/contacs.pdf']
        caption = [f'–ö–æ–Ω—Ç–∞–∫—Ç—ã –∫–æ–º–ø–∞–Ω–∏–∏ {ES}']
        Documents.send_document_with_markup(message.chat.id, document, caption)

    def corporate_values(message: types.Message) -> types.Message:
        document = ['prod_data/–æ_–∫–æ–º–ø–∞–Ω–∏–∏/–∫–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ_—Ü–µ–Ω–Ω–æ—Å—Ç–∏/gpn_guide.pdf']
        caption = ['–ö–æ—Ä–ø–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —Ü–µ–Ω–Ω–æ—Å—Ç–∏']
        Documents.send_document_with_markup(message.chat.id, document, caption)
